/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}@font-face{font-family:Syncopate;font-style:normal;font-weight:700;src:url(../fonts/Syncopate/Syncopate-Bold.ttf) format("truetype")}@font-face{font-family:Syncopate;font-style:normal;font-weight:400;src:url(../fonts/Syncopate/Syncopate-Regular.ttf) format("truetype")}@font-face{font-family:Montserrat;font-style:normal;font-weight:700;src:url(../fonts/Montserrat/Montserrat-Bold.ttf) format("truetype")}@font-face{font-family:Montserrat;font-style:normal;font-weight:500;src:url(../fonts/Montserrat/Montserrat-Medium.ttf) format("truetype")}@font-face{font-family:Montserrat;font-style:normal;font-weight:400;src:url(../fonts/Montserrat/Montserrat-Regular.ttf) format("truetype")}:root{--color-bg:#0F0D12;--color-title:#929292;--color-text:#929292;--color-link:#929292;--color-link-hover:#fff;--color-orange:#ff8e1e;--color-orange-accent:#e17f1d;--header-max-width:1280px;--header-margin:30px auto 0px auto;--header-padding:30px 70px 0px 70px;--header-margin-desktop-1:20px auto 0px auto;--header-padding-desktop-1:20px 70px 0 70px;--header-margin-desktop:20px 0px 0px 0px;--header-padding-desktop:20px 30px 0px 30px;--header-margin-mobile:15px 0px 0px 0px;--header-padding-mobile:15px 20px 0px 20px;--container-max-width:1200px;--container-padding:20px;--container-padding-laptop:20px 20px;--container-padding-desktop:20px 20px;--container-padding-tablet:20px 20px;--container-padding-mobile:20px 20px;--section-padding:20px}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box}body{background:var(--color-bg);margin:0;padding:0;font-family:Montserrat,sans-serif;cursor:default}img{max-width:100%}a{text-decoration:none}.button,a,p,span{transition:.4s ease;outline:0}.link{color:var(--color-link)}.link:hover{color:var(--color-link-hover)}.link,a{cursor:pointer}.text{display:block;color:var(--color-text);font-size:16px;line-height:25px}.title{color:var(--color-title);display:block}.title-text{font-size:1.5625rem;font-weight:800;line-height:30px;letter-spacing:1.3px}.title-lg{font:bold 2.875rem/69px Syncopate,sans-serif;text-transform:uppercase}.logo{display:block}.logo-hd{background:url(../img/logo-hd.svg) no-repeat center/contain;width:80px;height:30px}.logo-ft{background:url(../img/logo-ft.svg);width:133px;height:60px}.section{padding:var(--section-padding)}.container{max-width:var(--container-width);padding:var(--container-padding);margin:0 auto}@media (max-width:1024px){.container{padding:var(--container-padding-laptop)}}@media (max-width:1024px){.container{padding:var(--container-padding-desktop)}}@media (max-width:768px){.container{padding:var(--container-padding-tablet)}}@media (max-width:550px){.container{padding:var(--container-padding-mobile)}}.icon{display:flex;align-items:center}.icon-eng:before{background:url(../img/icons/eng.svg) no-repeat center/contain;content:'';position:relative;display:block;width:18px;height:18px}.icon-circle-arrow:after{background:url(../img/icons/icon-circle-arrow.svg) no-repeat center/contain;content:'';position:relative;display:width=20;width:height=20;height:100%}.btn{cursor:pointer;display:flex;align-items:center;justify-content:center}.btn-orange{background:var(--color-orange)}.btn-orange:hover{background:var(--color-orange-accent)}header{position:absolute;top:0;left:0;right:0;z-index:999}header .header{width:100%;display:grid;grid-template-columns:minmax(80px,180px) 1fr;grid-gap:10px;align-items:center;max-width:var(--header-max-width);margin:var(--header-margin);padding:var(--header-padding)}@media (max-width:1280px){header .header{margin:var(--header-margin-desktop-1);padding:var(--header-padding-desktop-1)}}@media (max-width:1024px){header .header{grid-template-columns:minmax(80px,130px) 1fr;margin:var(--header-margin-desktop);padding:var(--header-padding-desktop)}}@media (max-width:550px){header .header{display:flex;justify-content:space-between;margin:var(--header-margin-mobile);padding:var(--header-padding-mobile)}}header .header-wrap{display:grid;grid-template-columns:1fr minmax(90px,95px);grid-gap:40px;position:relative}@media (max-width:550px){header .header-wrap{position:absolute;display:none;flex-direction:column-reverse;width:95vw;left:0;right:0;padding:20px;margin:0 auto;top:80px;border-radius:5px;border:1px solid #929292;background-color:var(--color-bg)}}header .header-menu{display:flex;align-items:center}header .header-menu-link{font:normal .75rem/18px Syncopate,sans-serif;position:relative}@media (max-width:768px){header .header-menu-link{font-size:1.55vw}}header .header-menu-link:hover:after{color:var(--color-link);cursor:default}header .header-menu-link:after{content:'/';margin:0 30px;color:var(--color-link);cursor:default}@media (max-width:1024px){header .header-menu-link:after{margin:0 20px}}@media (max-width:768px){header .header-menu-link:after{margin:0 10px}}header .header-menu-link:nth-last-child(1):after{display:none}header .header-menu-link.active:before{background:var(--color-link);content:'';display:block;bottom:-5px;left:0;position:absolute;width:50px;height:1px}header .header-menu-toggle{width:45px;cursor:pointer;display:none}@media (max-width:550px){header .header-menu-toggle{display:block}}header .header-menu-toggle:hover .header-wrap{display:flex!important}header .header-menu-toggle:hover .header-menu-toggle-line:nth-child(2){background:var(--color-orange-accent);margin-left:5px}header .header-menu-toggle:hover .header-menu-toggle-line:nth-child(3){background:var(--color-orange-accent);margin-left:15px}header .header-menu-toggle-line{background:var(--color-text);width:100%;display:block;height:2px;border-radius:10px;margin-bottom:5px;transition:.4s ease}header .header-menu-toggle-line:nth-child(2){max-width:40px}header .header-menu-toggle-line:nth-child(3){max-width:30px}header .header-lang{font:normal .625rem Syncopate,sans-serif;color:var(--color-text);position:relative}header .header-lang:hover .header-lang-select-list{display:flex!important}header .header-lang .icon:before{margin-right:6px}header .header-lang-select-list{background:rgba(18,18,25,.98);position:absolute;display:none;flex-direction:column;margin-top:10px;border:1px solid #676577;border-radius:5px;padding:10px 15px;position:absolute;top:40px;left:0;min-width:95px}header .header-lang-select-list:hover{display:flex!important}header .header-lang-select-list-title{margin:8px 0;width:100%;cursor:pointer}header .header-lang-selected{border:1px solid #676577;padding:10px 10px;border-radius:5px}header .header-lang-selected:hover{cursor:pointer}header .header-lang-selected:after{border:2px 2px 0 0 solid #fff;content:"";display:block;width:8px;height:8px;transform:rotate(135deg);position:absolute;top:4px;right:-5px;transition:.2s ease}header .header-lang-selected.opened:after{transform:rotate(-45deg);top:8px}.section-header{margin-top:150px}@media (max-width:550px){.section-header{margin-top:30px}}.section-header .container{max-width:930px;padding:70px 0 30px 0;background:url(../img/header-points.svg),url(../img/header-lines.svg) no-repeat right center/contain}@media (max-width:550px){.section-header .container{padding:40px 0 30px 0;background:url(../img/header-lines.svg);background-position:0 -10px;background-repeat:no-repeat;background-size:contain}}.section-header .container .title{margin-bottom:20px}@media (max-width:1024px){.section-header .container .title{font-size:2.0625rem;line-height:46px}}@media (max-width:550px){.section-header .container .title{font-size:1.25rem;line-height:28px;margin-bottom:18px}}.section-header .container .text{max-width:550px;width:100%}@media (max-width:550px){.section-header .container .text{font-size:.875rem;line-height:20px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
